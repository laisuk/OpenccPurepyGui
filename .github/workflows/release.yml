name: Release OpenccPurepyGui

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact_suffix: linux-x64
            archive_name: OpenccPurepyGui-${{ github.ref_name }}-linux-x64.tar.gz
            pack_cmd: |
              tar -czf ${{ matrix.archive_name }} -C mainwindow.dist .
          - os: windows-latest
            artifact_suffix: win-x64
            archive_name: OpenccPurepyGui-${{ github.ref_name }}-win-x64.zip
            pack_cmd: powershell -Command "Compress-Archive -Path mainwindow.dist\* -DestinationPath $env:archive_name"
          - os: macos-latest
            artifact_suffix: macos
            archive_name: OpenccPurepyGui-${{ github.ref_name }}-macos.zip
            pack_cmd: |
              cd mainwindow.dist
              zip -r ../${{ matrix.archive_name }} .
              cd ..

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt

      - name: Linux prerequisites
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y patchelf libgl1 libx11-xcb1 libxkbcommon-x11-0 libxcb-cursor0 libnss3

      - name: Show tool versions
        shell: bash
        run: |
          python --version
          python -m nuitka --version || true
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            patchelf --version || true
          else
            echo "Skipping patchelf check (not Linux)."
          fi

      - name: Build (Nuitka)
        shell: bash
        run: |
          python -m nuitka \
            --standalone \
            --enable-plugin=pyside6 \
            --include-package=opencc_purepy \
            --include-data-dir=opencc_purepy/dicts=opencc_purepy/dicts \
            --output-filename=OpenccPurepyGui \
            --lto=yes \
            --assume-yes-for-downloads \
            mainwindow.py

      - name: Package artifact
        shell: bash
        env:
          archive_name: ${{ matrix.archive_name }}
        run: ${{ matrix.pack_cmd }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: OpenccPurepyGui-${{ github.ref_name }}-${{ matrix.artifact_suffix }}
          path: ${{ matrix.archive_name }}
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List files
        run: |
          echo "Artifacts downloaded to ./dist"
          find dist -type f -maxdepth 2

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: OpenccPurepyGui ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/**/*
